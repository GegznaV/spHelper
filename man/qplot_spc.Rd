% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qplot_spc.R
\name{qplot_spc}
\alias{qplot_spc}
\alias{gg_spc}
\title{[!!!] Plot spectroscopic curves}
\usage{
qplot_spc(sp, Title = "Components", xLabel = labels(sp, ".wavelength"),
  yLabel = labels(sp, "spc"), by = "cNames",
  palette = hyGet_palette(sp), legendName = FALSE, filled = TRUE,
  normalize = FALSE, facets = FALSE, subTitle = NULL,
  names.in = NULL, line_size = 1, add = FALSE, ...)

gg_spc(sp, by = "cNames", line_size = 1, ...)
}
\arguments{
\item{sp}{\code{\link[=hyperSpec-class]{hyperSpec}} object.}

\item{Title}{The main title for the plot.}

\item{xLabel}{A label for abscisa (x) axis.}

\item{yLabel}{A label for ordinate (y) axis.}

\item{by}{A name of variable in \code{sp} that contains variable names.
If indicated variable does not exist, row names are used instead.\cr
Default is \code{names = 'cNames'}}

\item{legendName}{A name of a legend. Possible entries: \enumerate{
\item {logical \code{FALSE}}{ - a legend without a name;}
\item {logical \code{TRUE}}{ - a label of a variable \code{name} is used as a name of a legend
    (\code{legendName <- labels(sp,name}));}
\item {...}{manual input of the name.}
}}

\item{filled}{Logical. If \code{TRUE}, colored fill is used. If \code{FALSE}, no fill is used.
(Fill is an area between ordinate axis and the curve.)}

\item{normalize}{A flag that indicates whether components should be
normalized before plotting.
    Possible selections: \enumerate{
    \item {\code{FALSE}, \code{0}}{ - do not normalize;}
    \item {\code{TRUE}, \code{+1}}{ - normalize to max value;}
    \item {\code{-TRUE}, \code{-1}}{ - normalize to min value [! this choise can give unexpected results];}
    \item {\code{"auto"}}{ - one of the choices above is selected by determining if spectra have any
         possitive and any negative peaks:\itemize{
         \item \code{Below0 <- any(sp$spc < 0);}
         \item \code{Above0 <- any(sp$spc > 0);}
         \item \code{normalize <- (Above0 - Below0)}
         }
         }
    }}

\item{facets}{A logical flag. If \code{TRUE}, spectra are plotted on separate graphs/facets
       (implemented by function \code{\link[ggplot2]{facet_grid}}). If {\code{FALSE}, all spectra
        are plotted on one facet.
}}

\item{subTitle}{The second line of title, which will be smaller and
and in italics.}

\item{names.in}{DEPRECATED. Use \code{by} instead.}

\item{...}{further arguments to geom_line.}
}
\value{
A \code{\link[ggplot2]{ggplot}} object.
       More details in package \pkg{ggplot2}.
}
\description{
Plot spectroscopic curves in different colors. \cr

             [ DESCRIPTION MUST BE UPDATED ]
}
\details{
\code{qplot_kSp} plots spectra on one graph. \cr
         \code{qplot_kSpFacets} plots spectra on separate graphs (facets).\cr
}
\note{
Before using as an argument \code{sp},
         a matrix of components/loadings (\code{sp}) must be treated
         with function \code{\link[hyperSpec]{decomposition}} (or equivalent)
         which converts it to \code{\link[=hyperSpec-class]{hyperSpec}} object.
}
\examples{
library(spHepler)
library(spPlot)


  ggplot() +
   qplot_spc(sp, by = "gr", add = TRUE, alpha = .2) +
   qplot_spStat(sp,"gr", mean, add = TRUE)



qplot_kSp(Loadings2)

data(flu, package = "hyperSpec")

qplot_kSpFacets(flu, Title = "Flu dataset")
qplot_kSpFacets(flu, Title = "Flu dataset", normalize = 1)
qplot_kSpFacets(flu, Title = "Flu dataset", normalize = FALSE)
qplot_kSpFacets(flu, Title = "Flu dataset", normalize = -1)

## Remove fill -----------------------------------------------------------------


qplot_kSp(flu, filled = FALSE)
qplot_sp(flu)

## Name of a legend ------------------------------------------------------------
flu$c2 <- as.factor(flu$c)

qplot_sp(flu, Title = "Flu dataset", by = 'c2', legendName = FALSE)
qplot_sp(flu, Title = "Flu dataset", by = 'c2', legendName = TRUE)
qplot_sp(flu, Title = "Flu dataset", by = 'c2', legendName = "Concentration")

## Example of line color transitions -------------------------------------------
  qplot_sp(laser)

}
\seealso{
Other \pkg{spHelper} plots: \code{\link{check_palette}},
  \code{\link{layer_spRangeMean}},
  \code{\link{plot_colors}}, \code{\link{plot_hyPalette}},
  \code{\link{plot_spCompare}}, \code{\link{plot_spDiff}},
  \code{\link{plot_spDistribution}},
  \code{\link{qplot_confusion}},
  \code{\link{qplot_crosstab}},
  \code{\link{qplot_infoDim}}, \code{\link{qplot_kAmp}},
  \code{\link{qplot_kSp}}, \code{\link{qplot_prediction}},
  \code{\link{qplot_spRangeCenter}},
  \code{\link{qplot_spRangeMedian}},
  \code{\link{qplot_spStat}}, \code{\link{rmExpr}},
  \code{\link{rm_stripes}}, \code{\link{stat_chull}}

Other component analysis / factorisation related functions in \pkg{spHelper}: \code{\link{getScores}},
  \code{\link{infoDim}}, \code{\link{plot_spDiff}},
  \code{\link{qplot_infoDim}}, \code{\link{qplot_kAmp}},
  \code{\link{qplot_kSp}}, \code{\link{reconstructSp}},
  \code{\link{sortLoadings}}, \code{\link{unipeak}},
  \code{\link{whichOutlier}}
}
\author{
Vilmantas Gegzna
}
\concept{\pkg{spHelper} plots}
\concept{component analysis / factorisation related functions in \pkg{spHelper}}
